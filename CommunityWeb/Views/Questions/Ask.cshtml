﻿@model CommunityWeb.ViewModels.QuestionViewModel
@{
    ViewBag.Title = "Ask";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<h3><span class="glyphicon glyphicon-pencil"></span> បង្កើតសំណួរ</h3>
<hr />
<form enctype = "multipart/form-data">
    <div class="choose-img">
        <img id="pc-img" src="#" />
        <input type="file" name="file" id="input-img" class="input-file" />
        
    </div>
    <div class="row">
        <div class="qscontainer form-group">
            <div class="qs">
                <span class="glyphicon glyphicon-question-sign"></span>
                @Html.LabelFor(m => m.Title)
            </div>
            <div class="entry"><input type="text" class="form-control qTitle" placeholder="តើអ្នកចង់សួរអ្វីទាក់ទងការសរសេរកូដ?​​ សូមសួរឲ្យជាក់លាក់" /></div>
        </div>
    </div>
    <div class="row">
        <div class="qscontainer form-group">
            <div class="qs">
                <span class="glyphicon glyphicon-info-sign"></span>
                @Html.LabelFor(m => m.Description)
                <label for="input-img" class="btn btn-link btn-sm" style="margin-left: 20px">
                    <span class="glyphicon glyphicon-picture"></span>
                    បញ្ជូលរូបភាព
                </label>
                <label class="imgName"></label>
                <label class="del-img" hidden><span class="glyphicon glyphicon-trash"></span></label>
            </div>
            <div style="margin-left:20px">
                
            </div>
            <div class="entry"><textarea style="resize:none;" class="form-control qDesc" placeholder="តើអ្នកចង់សួរអ្វីទាក់ទងការសរសេរកូដ?​​ សូមសួរឲ្យជាក់លាក់" , rows="5"></textarea></div>
        </div>
        
    </div>
    <div class="row">
        <div class="qscontainer form-group">
            <div class="qs">
                <span class="glyphicon glyphicon-tags"></span>
                @Html.LabelFor(m => m.TopicId)
                <span class="topic-list">@*topic in this list is added dynamically*@</span>
            </div>
            <div class="entry" hidden>@Html.DropDownListFor(m => m.TopicId, new SelectList(Model.Topics, "Id", "Name"), new { @class = "form-control", id = "ddlTopics" })</div>
            <div class="entry">
                <input type="text" id="txtTopic" class="form-control" placeholder="ប្រាប់ប្រធានបទដូចជា C#, HTML, Java, ... (យ៉ាងតិច ១ យ៉ាងច្រើន ៥​)" />
            </div>
        </div>
    </div>
    <div class="topics list-group">
    </div>
    <button type="submit" class="btn btn-primary btn-post-question">
        <span class="glyphicon glyphicon-check"></span>
        បង្ហោះសំណួររបស់ខ្ញុំ
    </button>
    <button type="button" class="btn btn-sm btn-warning">
        <span class="glyphicon glyphicon-ban-circle"></span>
        បោះបង់
    </button>
</form>
@section scripts
    {
    <script>
        $(document).ready(function () {
            
            var imgFile;
            var data;
            $("#input-img").change(function (event) {
                pathImg = URL.createObjectURL(event.target.files[0]);
                imgFile = event.target.files[0];
                console.log(imgFile);
                //$("#pc-img").attr('src', pathImg);
                //$("#pc-img").css({ width: auto, height: auto });
                data = new FormData();
                var files = $("#input-img").get(0).files;
                $(".del-img").removeAttr("hidden");
                $(".imgName").text(imgFile.name);
                if (files.length > 0) {
                    data.append("HelpSectionImages", files[0]);
                }
            });

            $(".del-img").click(function () {
                data = new FormData();
                data.append("HelpSectionImages", null);
                $(this).attr("hidden","true");
                $(".imgName").text("");
            })

            $('form').submit(function () {
                var topics = [];
                $(".topic-name").each(function () {
                    topics.push($(this).text());
                });

                if (data == null) {
                    data = new FormData();
                }
                data.append("Title", $('.qTitle').val());
                data.append("Description", $('.qDesc').val());
                data.append("Topics", topics);

                $.ajax({
                    url: '@Url.Action("Ask","Questions")',
                    type: "POST",
                    //dataType: "json",
                    //mimeType:"multipart/form-data",
                    //contentType: "application/json;charset=utf-8",
                    processData: false,
                    contentType: false,
                    //data: JSON.stringify({
                    //    Title: $('.qTitle').val(),
                    //    Description: $('.qDesc').val(),
                    //    SelectedTopics: topics,

                    //}),
                    data: data,
                    success: function (data) {
                        console.log(data);
                        window.location.href = data;
                    },
                    error: function () {
                        console.log("something failded");
                    }
                });
            });


            // Get all topics from dropdownlist into an array
            var topics = [];
            var selectedTopics = new Array();
            $("#ddlTopics option").each(function () {
                topics.push(this.valueOf().text);
            });

            $("#txtTopic").keyup(function (event) {
                // Ignore key 'shift'
                var shiftKeyCode = 16;
                if (event.which == shiftKeyCode) {
                    return;
                }

                $(".topics").children().remove();
                if ($("#txtTopic").val() != "") {
                    for (i = 0; i < topics.length; i++) {
                        // Check if user input is matched partially or fully in any topic's name
                        // If there is a match, append an element to list-group of topics for choosing
                        if (topics[i].toLowerCase().indexOf($("#txtTopic").val().toLowerCase()) !== -1) {
                            $(".topics")
                                .append("<a topic-attribute='" + topics[i] + "' class='list-group-item list-group-item-success'>" + topics[i] + "</a>")
                                .css({ "max-width": "300px", "cursor": "pointer" });
                        }
                    }
                }
            });

            $("body").on("click", ".list-group-item", function () {
                var topic = $(this).attr("topic-attribute");
                $(".topic-list").append('<span class="topic-block" id="topic-' + Math.floor(Math.random() * 1000) + '"><span class="topic-name">' + topic + '</span><span class="glyphicon glyphicon-remove topic-remove"></span></span>');
                $(".topics").children().remove();
                $("#txtTopic").val("");
            });

            $("body").on("click", ".topic-remove", function () {

                var elementId = ($(this).parent().attr("id"));
                $("#" + elementId).remove();
            });

            //$(".btn-post-question").click(function () {
            //    $.ajax({
            //        url: "/questions/ask",
            //        data:
            //    });
            //});

            var getTopicList = function () {
                $(".topic-list").children("topic-block")
            };
        });
    </script>
}
